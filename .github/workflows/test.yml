name: AI CI

on:
  push:
    branches:
      - main
      - 'stable/**'
      - 'fix-actions'

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

env:
  FORCE_COLOR: '1' # Make tools pretty.
  TOX_TESTENV_PASSENV: FORCE_COLOR
  PIP_DISABLE_PIP_VERSION_CHECK: '1'
  PIP_NO_PYTHON_VERSION_WARNING: '1'
  PYTHON_LATEST: '3.11'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: ${{env.PYTHON_LATEST}}
      - name: Install dependencies
        env:
          FLIT_ROOT_INSTALL: true
        run: |
          python -m pip install flit
          python -m flit install --symlink
      - uses: pre-commit/action@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: jakebailey/pyright-action@v1
        with:
          version: 1.1.337

  test-sqlite:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ['3.11', '3.12']
        django: ['4.2']
        wagtail: ['5.2']
        backend: ['base', 'llm']
        experimental: [false]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Install Node dependencies
        run: npm ci
      - name: Build static files
        run: ./node_modules/.bin/webpack --mode production
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade tox
      - name: Test
        run: |
          tox
        env:
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-sqlite-${{ matrix.backend }}
      - name: ⬆️ Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore
          retention-days: 1

  test-postgres:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        python: ['3.11', '3.12']
        django: ['4.2']
        wagtail: ['5.2']
        backend: ['base', 'llm']
        experimental: [false]

    services:
      postgres:
        image: ${{ matrix.postgres || 'postgres:11' }}
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Install Node dependencies
        run: npm ci
      - name: Build static files
        run: ./node_modules/.bin/webpack --mode production
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade tox
      - name: Test
        run: |
          tox
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/wagtail_ai
          TOXENV: python${{ matrix.python }}-django${{ matrix.django }}-wagtail${{ matrix.wagtail }}-postgres-${{ matrix.backend }}
      - name: ⬆️ Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-data
          path: .coverage.*
          if-no-files-found: ignore
          retention-days: 1

  coverage:
    runs-on: ubuntu-latest
    needs:
      - test-sqlite
      - test-postgres

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          # Use latest Python, so it understands all syntax.
          python-version: ${{env.PYTHON_LATEST}}

      - run: python -Im pip install --upgrade coverage

      - name: ⬇️ Download coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-data

      - name: ＋ Combine coverage
        run: |
          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty
          python -Im coverage report
          echo "## Coverage summary" >> $GITHUB_STEP_SUMMARY
          python -Im coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
      - name: 📈 Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
