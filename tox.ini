[tox]
skipsdist = True
usedevelop = True

envlist =
    # Oldest Python, Django, and Wagtail
    python{3.11}-django{4.2}-wagtail{6.3}-{sqlite,postgres}-{base,llm}
    # Supported Python with latest LTS releases of Django and Wagtail
    python{3.11,3.12,3.13}-django{5.2}-wagtail{7.0}-{sqlite,postgres}-{base,llm}
    # Latest stable everything
    python{3.13}-django{5.2}-wagtail{7.1}-{sqlite,postgres}-{base,llm}
    # Test against Wagtail's main branch is not done with tox as it would
    # require building Wagtail's static assets due to the use of
    # ManifestStaticFilesStorage. This is done separately in nightly CI.

[gh-actions]
python =
    3.11: python3.11
    3.12: python3.12
    3.13: python3.13

[gh-actions:env]
DB =
    sqlite: sqlite
    postgres: postgres
BACKEND =
    base: base
    llm: llm

[testenv]
pass_env =
    FORCE_COLOR
    NO_COLOR

set_env =
    DJANGO_DEBUG = false
    STATIC_ROOT = {envtmpdir}/test-static
    STATICFILES_STORAGE = django.contrib.staticfiles.storage.ManifestStaticFilesStorage

commands =
    python {toxinidir}/testmanage.py makemigrations --check --dry-run
    python {toxinidir}/testmanage.py collectstatic --no-input
    coverage run -m pytest {posargs}

basepython =
    python3.11: python3.11
    python3.12: python3.12

deps =
    django4.2: Django>=4.2,<4.3
    django5.2: Django>=5.2,<5.3
    djangomain: git+https://github.com/django/django.git@main#egg=Django

    wagtail6.3: wagtail>=6.3,<7.0
    wagtail7.0: wagtail>=7.0,<7.1
    wagtail7.1: wagtail>=7.1,<7.2
    wagtailmain: git+https://github.com/wagtail/wagtail.git

    postgres: psycopg2>=2.6

    .[testing]

[testenv:llm]
deps =
    {[testenv]deps}
    .[llm]

setenv =
    postgres: DATABASE_URL={env:DATABASE_URL:postgres:///wagtail_ai}

[testenv:coverage-report]
commands =
    python -Im coverage combine
    python -Im coverage report -m

[testenv:interactive]
basepython = python3.11

deps =
    wagtail>=6.3
    .[testing]

commands_pre =
    python {toxinidir}/testmanage.py makemigrations
    python {toxinidir}/testmanage.py migrate
    python {toxinidir}/testmanage.py shell -c "from django.contrib.auth.models import User;(not User.objects.filter(username='admin').exists()) and User.objects.create_superuser('admin', 'super@example.com', 'changeme')"
    python {toxinidir}/testmanage.py createcachetable

commands =
    {posargs:python testmanage.py runserver 0.0.0.0:8020}

setenv =
    INTERACTIVE = 1
    PYTHONPATH = {toxinidir}/tests:{toxinidir}
